image: Ubuntu1804

version: 1.6.7.{build}

branches:
    only:
        - master

environment:
    matrix:
        - GOOS: linux
          GOARCH: amd64
          PREFIX: linux-amd64
          SUFFIX: 
        - GOOS: windows
          GOARCH: 386
          PREFIX: windows-386
          SUFFIX: .exe
        - GOOS: linux
          GOARCH: 386
          PREFIX: linux-386
          SUFFIX: 
        - GOOS: linux
          GOARCH: arm64
          PREFIX: linux-arm64
          SUFFIX: 

clone_depth: 1

# scripts that run after cloning repository
install:
    - export GOVERSION=1.14
    - export NDK_VERSION=r20b
    - export ARCH=`uname -m`
    - wget "https://storage.googleapis.com/golang/go$GOVERSION.linux-amd64.tar.gz"
    - tar xzf "go$GOVERSION.linux-amd64.tar.gz"
    - export GOROOT=$(pwd)/go
    - export PATH=$(pwd)/go/bin:$PATH
    - export ANDROID_NDK_HOME=$APPVEYOR_BUILD_FOLDER/.android/android-ndk-$NDK_VERSION
    - if [ ! -d "$ANDROID_NDK_HOME" ]; then mkdir -p $ANDROID_NDK_HOME; fi
    - pushd $APPVEYOR_BUILD_FOLDER/.android
    - wget http://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-$ARCH.zip -O android-ndk-$NDK_VERSION-linux-$ARCH.zip
    - unzip -q android-ndk-$NDK_VERSION-linux-$ARCH.zip
    - ls -l
    - popd
    - export ANDROID_ARM_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi29-clang
    - export ANDROID_ARM_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi29-clang++
    - export ANDROID_ARM_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip
    - export ANDROID_X86_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android29-clang
    - export ANDROID_X86_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android29-clang++
    - export ANDROID_X86_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android-strip
    - export ANDROID_AARCH64_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang
    - export ANDROID_AARCH64_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang++
    - export ANDROID_AARCH64_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip
    - export ANDROID_X64_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android29-clang
    - export ANDROID_X64_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android29-clang++
    - export ANDROID_X64_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android-strip
    - if [ "$GOOS" = "android" -a "$GOARCH" = "arm" ]; then export CC=$ANDROID_ARM_CC; CXX=$ANDROID_ARM_CXX; fi
    - if [ "$GOOS" = "android" -a "$GOARCH" = "arm64" ]; then export CC=$ANDROID_AARCH64_CC; CXX=$ANDROID_AARCH64_CXX; fi
    - if [ "$GOOS" = "android" -a "$GOARCH" = "386" ]; then export CC=$ANDROID_X86_CC; CXX=$ANDROID_X86_CXX; fi
    - if [ "$GOOS" = "android" -a "$GOARCH" = "amd64" ]; then export CC=$ANDROID_X64_CC; CXX=$ANDROID_X64_CXX; fi
    - export PATH=$ANDROID_NDK_HOME:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${PATH}
    - export GO111MODULE=on
    - export GOPROXY=direct
    - git clone --depth=1 https://github.com/coredns/coredns.git
    - git clone --depth=1 https://github.com/coredns/fallback.git

# scripts that run before build
before_build:
    - go env
    - go version

# custom build scripts
build_script:
    - cd fallback
    - git apply "$APPVEYOR_BUILD_FOLDER/fallback.patch"
    - go mod init github.com/coredns/fallback
    - cd ..
    - cd coredns
    - git apply "$APPVEYOR_BUILD_FOLDER/forward.go.patch"
    - git apply "$APPVEYOR_BUILD_FOLDER/forward-setup.go.patch"
    - sed -i 's|forward:forward|fallback:github.com/coredns/fallback\nforward:forward\nproxy:github.com/coredns/proxy\nproxard:github.com/missdeer/proxard|g' plugin.cfg
    - sed -i 's|hosts:hosts|ads:github.com/c-mueller/ads\nhosts:hosts|g' plugin.cfg
    - sed -i 's|cache:cache|cache:cache\nredisc:github.com/miekg/redis|g' plugin.cfg
    - sed -i 's|rewrite:rewrite|rewrite:rewrite\nbogus:github.com/missdeer/bogus\nipset:github.com/missdeer/ipset|g' plugin.cfg
    - echo "replace (" >> go.mod
    - echo "    github.com/coredns/fallback => ../fallback" >> go.mod
    - echo ")" >> go.mod
    - sed -i '/azure/d' plugin.cfg
    - sed -i '/route53/d' plugin.cfg
    - env GOOS=linux GOARCH=amd64 make
    - echo "==============================================="
    - ./coredns -plugins
    - echo "==============================================="
    - make CGO_ENABLED=$CGO_ENABLED
    - cd ..

# scripts that run after build
after_build:
    - mkdir -p "distrib/coredns-$PREFIX" 
    - cp "$APPVEYOR_BUILD_FOLDER/coredns/coredns" "distrib/coredns-$PREFIX/coredns$SUFFIX"
    - cp "$APPVEYOR_BUILD_FOLDER/coredns/coredns" "distrib/coredns$SUFFIX"
    - if [ "$GOOS" = "windows" ]; then cp "$APPVEYOR_BUILD_FOLDER/coredns.exe.manifest" "distrib/coredns-$PREFIX/coredns.exe.manifest"; fi
    - cd distrib
    - curl -sSL git.io/corefile | bash
    - mv Corefile "coredns-$PREFIX/Corefile"
    - zip -r "coredns-$PREFIX.zip" "coredns-$PREFIX" 
    - zip -r coredns.zip "coredns$SUFFIX"
    - md5sum "coredns$SUFFIX"
    - sha1sum "coredns$SUFFIX"
    - sha224sum "coredns$SUFFIX"
    - sha256sum "coredns$SUFFIX"
    - sha384sum "coredns$SUFFIX"
    - sha512sum "coredns$SUFFIX"
    - md5sum coredns.zip
    - sha1sum coredns.zip
    - sha224sum coredns.zip
    - sha256sum coredns.zip
    - sha384sum coredns.zip
    - sha512sum coredns.zip

artifacts:
    - path: distrib/coredns-$PREFIX.zip
      name: full_package
    - path: distrib/coredns.zip
      name: exe_only
